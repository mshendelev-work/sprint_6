import allure

from src.constants import Constants
from src.locators.header_locators import HeaderLocators
from src.locators.home_page_locators import HomePageLocators
from src.locators.order_page_locators import OrderPageLocators
from src.pages.home_page import HomePage
from src.pages.order_page import OrderPage


class TestOrderScooter:
    @allure.title('Checking order scooter unit')
    def test_order_scooter_one_data(self, driver):
        make_order = HomePage(driver)
        make_order.open_home_page(Constants.HOME_URL)
        make_order.click_for_element(HomePageLocators.BUTTON_COOKIE)
        button_order = make_order.search_for_element(HeaderLocators.BUTTON_ORDER_HEADER)
        button_order.click()
        make_order_page = OrderPage(driver)
        input_first_name = make_order_page.search_for_element(OrderPageLocators.INPUT_FIRST_NAME)
        input_first_name.send_keys(Constants.USER_DATA['first_name'])
        input_last_name = make_order_page.search_for_element(OrderPageLocators.INPUT_LAST_NAME)
        input_last_name.send_keys(Constants.USER_DATA['last_name'])
        input_address = make_order_page.search_for_element(OrderPageLocators.INPUT_ADDRESS)
        input_address.send_keys(Constants.ADDRESS_ONE)
        list_stations = make_order_page.search_for_element(OrderPageLocators.INPUT_SUBWAY)
        list_stations.click()
        choose_subway = make_order_page.search_for_element(OrderPageLocators.CHOOSE_SUBWAY_STATION_CULTURE_PARK)
        make_order_page.scroll_to_station(choose_subway)
        make_order_page.wait_for_clickable(choose_subway)
        choose_subway.click()
        input_phone = make_order_page.search_for_element(OrderPageLocators.INPUT_PHONE_NUMBER)
        input_phone.send_keys(Constants.PHONE_NUMBER_ONE)
        button_further = make_order_page.search_for_element(OrderPageLocators.BUTTON_FURTHER)
        button_further.click()
        input_date_order = make_order_page.search_for_element(OrderPageLocators.INPUT_DATE_ORDER)
        make_order_page.wait_for_clickable(input_date_order)
        input_date_order.send_keys(Constants.DATE_ONE)
        text_modal_window = make_order_page.search_for_element(OrderPageLocators.TEXT_MODAL_WINDOW)
        text_modal_window.click()
        choose_rental = make_order_page.search_for_element(OrderPageLocators.CHOOSE_RENTAL_PERIOD)
        choose_rental.click()
        choose_rental_two_days = make_order_page.search_for_element(OrderPageLocators.CHOOSE_RENTAL_PERIOD_TWO_DAYS)
        choose_rental_two_days.click()
        choose_black_color = make_order_page.search_for_element(OrderPageLocators.CHOOSE_BLACK_COLOR_SCOOTER)
        choose_black_color.click()
        input_for_comment = make_order_page.search_for_element(OrderPageLocators.INPUT_COMMENT_FOR_COURIER)
        input_for_comment.send_keys(Constants.COMMENT_FOR_COURIER_ONE)
        button_order_page = make_order_page.search_for_element(OrderPageLocators.BUTTON_ORDER)
        button_order_page.click()
        button_yes = make_order_page.search_for_element(OrderPageLocators.BUTTON_YES)
        button_yes.click()
        button_view_status = make_order_page.search_for_element(OrderPageLocators.BUTTON_VIEW_STATUS_ORDER)
        button_view_status.click()
        button_cancel_order = make_order_page.search_for_element(OrderPageLocators.BUTTON_CANCEL_ORDER)
        assert button_cancel_order.is_displayed() is True, 'Button is not displayed'
        assert button_cancel_order.is_enabled() is True, 'Button is not enabled'

    @allure.title('Checking order scooter unit')
    def test_order_scooter_second_data(self, driver):
        make_order = HomePage(driver)
        make_order.open_home_page(Constants.HOME_URL)
        make_order.click_for_element(HomePageLocators.BUTTON_COOKIE)
        button_order = make_order.search_for_element(HomePageLocators.BUTTON_ORDER_HOME_PAGE)
        make_order.scroll_to_locator(button_order)
        make_order.wait_for_clickable(button_order)
        button_order.click()
        make_order_page = OrderPage(driver)
        input_first_name = make_order_page.search_for_element(OrderPageLocators.INPUT_FIRST_NAME)
        input_first_name.send_keys(Constants.USER_DATA['first_name'])
        input_last_name = make_order_page.search_for_element(OrderPageLocators.INPUT_LAST_NAME)
        input_last_name.send_keys(Constants.USER_DATA['last_name'])
        input_address = make_order_page.search_for_element(OrderPageLocators.INPUT_ADDRESS)
        input_address.send_keys(Constants.ADDRESS_SECOND)
        list_stations = make_order_page.search_for_element(OrderPageLocators.INPUT_SUBWAY)
        list_stations.click()
        choose_subway = make_order_page.search_for_element(OrderPageLocators.CHOOSE_SUBWAY_STATION_CULTURE_PARK)
        make_order_page.scroll_to_station(choose_subway)
        make_order_page.wait_for_clickable(choose_subway)
        choose_subway.click()
        input_phone = make_order_page.search_for_element(OrderPageLocators.INPUT_PHONE_NUMBER)
        input_phone.send_keys(Constants.PHONE_NUMBER_SECOND)
        button_further = make_order_page.search_for_element(OrderPageLocators.BUTTON_FURTHER)
        button_further.click()
        input_date_order = make_order_page.search_for_element(OrderPageLocators.INPUT_DATE_ORDER)
        make_order_page.wait_for_clickable(input_date_order)
        input_date_order.send_keys(Constants.DATE_SECOND)
        text_modal_window = make_order_page.search_for_element(OrderPageLocators.TEXT_MODAL_WINDOW)
        text_modal_window.click()
        choose_rental = make_order_page.search_for_element(OrderPageLocators.CHOOSE_RENTAL_PERIOD)
        choose_rental.click()
        choose_rental_two_days = make_order_page.search_for_element(OrderPageLocators.CHOOSE_RENTAL_PERIOD_FOUR_DAYS)
        choose_rental_two_days.click()
        choose_black_color = make_order_page.search_for_element(OrderPageLocators.CHOOSE_BLACK_GREY_SCOOTER)
        choose_black_color.click()
        input_for_comment = make_order_page.search_for_element(OrderPageLocators.INPUT_COMMENT_FOR_COURIER)
        input_for_comment.send_keys(Constants.COMMENT_FOR_COURIER_SECOND)
        button_order_page = make_order_page.search_for_element(OrderPageLocators.BUTTON_ORDER)
        button_order_page.click()
        button_yes = make_order_page.search_for_element(OrderPageLocators.BUTTON_YES)
        button_yes.click()
        button_view_status = make_order_page.search_for_element(OrderPageLocators.BUTTON_VIEW_STATUS_ORDER)
        button_view_status.click()
        button_cancel_order = make_order_page.search_for_element(OrderPageLocators.BUTTON_CANCEL_ORDER)
        assert button_cancel_order.is_displayed() is True, 'Button is not displayed'
        assert button_cancel_order.is_enabled() is True, 'Button is not enabled'
